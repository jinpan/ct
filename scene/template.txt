import math
import os

import bpy

class Image(object):
  def __init__(self, filepath, scale=None, pos=None, rot=None):
    self.filepath = filepath
    self.scale = scale or (1., 1., 1.)
    self.pos = pos or (0., 0., 0.)
    self.rot = rot or (0., 0., 0.)

def render(images, output_filepath):
  bpy.data.objects["Cube"].select = True
  bpy.ops.object.delete()

  camera = bpy.data.scenes["Scene"].camera
  camera.location.x = 20
  camera.location.y = 0
  camera.location.z = 0
  camera.rotation_mode = 'XYZ'
  camera.rotation_euler[0] = math.radians(90)
  camera.rotation_euler[1] = math.radians(0)
  camera.rotation_euler[2] = math.radians(90)

  lamp_o = bpy.data.objects["Lamp"]
  lamp_o.location = (21.0, 0.0, 0.0)
  lamp = bpy.data.lamps[0]
  lamp.energy = 5.0

  for image in images:
    bpy.ops.import_scene.obj(filepath=image.filepath)
    bpy.ops.transform.resize(value=image.scale)
    bpy.ops.transform.translate(value=image.pos)
    for idx, value in enumerate(image.rot):
      rad = math.radians(value)
      axis = [0, 0, 0]; axis[idx] = 1
      bpy.ops.transform.rotate(value=rad, axis=tuple(axis))

  bpy.context.scene.render.filepath = output_filepath
  bpy.context.scene.render.alpha_mode = 'TRANSPARENT'
  bpy.ops.render.render(write_still = True)


if __name__ == '__main__':
  images = [
{images}
  ]

  render(images, "{output_filepath}")
